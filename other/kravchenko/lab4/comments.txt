/// Объявление структуры и сигнатур взаимодействия со списком стоит вынести в отдельный .h файл, а
/// саму реализацию в отдельный .c файл

/// Операции создания, инициализации элемента списка не должны приводить к завершеннию процесса - это неожиданное поведение
/// В таких ситуациях стоит возвращать код ошибки. Обработка ошибки должна быть в клиенстком кода, который будет принимать решение что делать

/// В чём смысл передавать параметром line, если вы его перезаписываете внутри getLines, и никак не используете затем "снаружи"?
/// Нужно перенести объявление внутрь 

/// '.' - нужно ввести имя в качестве макроподстановки или константы, чтобы было понятно, что в программе означает точка

/// По факту addNode не добавляет элемент в список - добавление вынесено сюда. Это нехорошо, т.к. клиентский код становится зависим от внутренней реализации списка (в особенности увидите это в следующем семестре, когда нужен будет список thread-safe)
/// Добавление элемента нужно перенести в addNode, добавить в качестве параметра сам список.

/// Перед завершением процесса\потока нужно учиться особождать все выделенные ресурсы. У вас не освобождается память выделенная под список.

/// strlen всегда завершается успешно и не возвращает ошибок?

/// strcpy всегда завершается успешно и не возвращает ошибок?
